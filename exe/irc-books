#!/usr/bin/ruby
# frozen_string_literal: true

require 'cinch'
require 'cinch/helpers'
require 'zip'
require 'highline'
require 'shellwords'
require 'tempfile'
require 'fileutils'
require 'irc/books/chooser'

EBOOKS = '#ebooks'

def on_next
  Timer(1, shots: 1) do
    yield
  end
end

def main
  cli = HighLine.new

  nick = cli.ask 'What is your nickname?'
  bot = Cinch::Bot.new do
    chooser = Irc::Books::Chooser.new

    configure do |conf|
      conf.server = 'irc.irchighway.net'
      conf.channels = [EBOOKS]
      conf.nick = nick
    end

    on :connect do |_msg|
      nil
    end

    on :join do |msg|
      if msg.user == bot.nick
        topic = msg.channel.topic.strip
        search_bots = topic.split.select { |word| word.match(/@.*/) }
        search_bots = search_bots.collect { |botnames| botnames.delete('@').downcase }
        chooser.set_search_bots(search_bots)

        on_next do
          begin
            running = true
            loop do
              break unless running

              chooser.choose do |cmd|
                if cmd == 'quit'
                  running = false
                else
                  on_next do
                    Channel(EBOOKS).send(Sanitize(cmd))
                  end
                end
              end
            end
          rescue StandardError => e
            puts "error: #{e}"
          ensure
            bot.quit
            sleep(2)
            exit
          end
        end

      end
    end

    on :dcc_send do |msg, dcc|
      user = msg.user.nick.downcase
      begin
        filename = dcc.filename
        file = Tempfile.new(filename)
        dcc.accept(file)
        file.close
        chooser.accept_file(user, filename, file)
      end
    end

    on :private do |msg, _dcc|
      chooser.parse_private_msg(msg.user.nick.downcase, Sanitize(msg.message))
    end

    on :message do |_msg|
      nil
    end
  end

  bot.loggers.level = :fatal
  bot.start
end

main
